/*
**************************************************
*	Tabela de Cadastros básicos
**************************************************	
quando não tem usuario criado
Data Source=(localdb)\MSSQLLocalDB;Initial Catalog=bdsw1tech;Integrated Security=True;Connect Timeout=30;Encrypt=False;TrustServerCertificate=True;ApplicationIntent=ReadWrite;MultiSubnetFailover=False

Quando tem o usuario 
Data Source=(localdb)\\MSSQLLocalDB;Initial Catalog=bdsw1tech; User ID=sw1tech; Password=@dmin123; Connect Timeout=30;

"DefaultConnection": "Data Source=192.168.0.36; Initial Catalog=bdsw1tech; User ID=sw1tech; Password=@dmin123; Connect Timeout=30;"
"DefaultConnection": "Data Source=(localdb)\\MSSQLLocalDB; Initial Catalog=bdsw1tech; User ID=sw1tech; Password=@dmin; Connect Timeout=30;"

HostAzul		
Data Source=bd.asp.hostazul.com.br,3533; Initial Catalog=8129_bdsw1tech; User ID=8129_sw1tech; Password=@dmin123; Connect Timeout=30;

Para resetar o contador identity

	DBCC CHECKIDENT ('TORCAMENTOITEM', RESEED, 0)

*/

/*
	Create database da sw1tech
	no windows deixa o caminho
*/
CREATE DATABASE bdSw1tech
ON 
( NAME = Sales_dat,
    FILENAME = 'C:\Sw1Tech\Dados\bdSw1tech.mdf')
LOG ON
( NAME = Sales_log,
    FILENAME = 'C:\Sw1Tech\Dados\bdSw1tech.ldf')
COLLATE SQL_Latin1_General_CP1_CI_AS
GO

/*
	Create database da sw1tech
	no windows deixa o caminho
*/
CREATE DATABASE bdSw1tech
COLLATE SQL_Latin1_General_CP1_CI_AS
GO

/*
Criando login da empresa
*/
CREATE LOGIN sw1tech WITH PASSWORD = '@dmin123'
GO

/*
	no database bdsw1tech
*/
Use bdsw1tech;
GO

CREATE USER sw1tech FOR LOGIN sw1tech
go

EXEC sp_addrolemember N'db_owner', N'sw1tech'
go

/*
vincular o usuario ao banco
*/
EXEC  sp_change_users_login @Action='update_one', @UserNamePattern='sw1tech', @LoginName='sw1tech';

/*
	Ok Sexo
*/
CREATE TABLE TSEXO (
	ID INT IDENTITY(1,1) NOT NULL,
	DHATUALIZACAO DATETIMEOFFSET,
	NOME VARCHAR(60)
PRIMARY KEY (ID))
GO
INSERT INTO TSEXO (NOME) VALUES ('MASCULINO')
INSERT INTO TSEXO (NOME) VALUES ('FEMININO')
INSERT INTO TSEXO (NOME) VALUES ('OUTRO')
GO
/*
	Ok UF's
*/
CREATE TABLE TUF (
	ID INT IDENTITY(1,1) NOT NULL,
	DHATUALIZACAO DATETIMEOFFSET,
	SIGLA CHAR(2),
	NOME VARCHAR(60)
PRIMARY KEY (ID))
GO

INSERT INTO TUF (NOME,SIGLA) VALUES ('Acre','AC')
INSERT INTO TUF (NOME,SIGLA) VALUES ('Alagoas','AL')
INSERT INTO TUF (NOME,SIGLA) VALUES ('Amapá','AP')
INSERT INTO TUF (NOME,SIGLA) VALUES ('Amazonas','AM')
INSERT INTO TUF (NOME,SIGLA) VALUES ('Bahia','BA')
INSERT INTO TUF (NOME,SIGLA) VALUES ('Ceará','CE')
INSERT INTO TUF (NOME,SIGLA) VALUES ('Distrito Federal','DF')
INSERT INTO TUF (NOME,SIGLA) VALUES ('Espírito Santo','ES')
INSERT INTO TUF (NOME,SIGLA) VALUES ('Goiás','GO')
INSERT INTO TUF (NOME,SIGLA) VALUES ('Maranhão','MA')
INSERT INTO TUF (NOME,SIGLA) VALUES ('Mato Grosso','MT')
INSERT INTO TUF (NOME,SIGLA) VALUES ('Mato Grosso do Sul','MS') 
INSERT INTO TUF (NOME,SIGLA) VALUES ('Minas Gerais','MG')
INSERT INTO TUF (NOME,SIGLA) VALUES ('Pará','PA')
INSERT INTO TUF (NOME,SIGLA) VALUES ('Paraíba','PB')
INSERT INTO TUF (NOME,SIGLA) VALUES ('Paraná','PR')
INSERT INTO TUF (NOME,SIGLA) VALUES ('Pernambuco','PE')
INSERT INTO TUF (NOME,SIGLA) VALUES ('Piauí','PI')
INSERT INTO TUF (NOME,SIGLA) VALUES ('Rio de Janeiro','RJ')
INSERT INTO TUF (NOME,SIGLA) VALUES ('Rio Grande do Norte','RN')
INSERT INTO TUF (NOME,SIGLA) VALUES ('Rio Grande do Sul','RS')
INSERT INTO TUF (NOME,SIGLA) VALUES ('Rondônia','RO')
INSERT INTO TUF (NOME,SIGLA) VALUES ('Roraima','RR')
INSERT INTO TUF (NOME,SIGLA) VALUES ('Santa Catarina','SC')
INSERT INTO TUF (NOME,SIGLA) VALUES ('São Paulo','SP')
INSERT INTO TUF (NOME,SIGLA) VALUES ('Sergipe','SE')
INSERT INTO TUF (NOME,SIGLA) VALUES ('Tocantins','TO')
GO

/*
	Ok Vendedores do sistema
	não usa mais
	CREATE TABLE TVENDEDOR (
		ID INT IDENTITY(1,1) NOT NULL,
		DHATUALIZACAO DATETIMEOFFSET,
		NOME VARCHAR(60),
		APELIDO VARCHAR(20)
	PRIMARY KEY (ID))
	GO

	INSERT INTO TVENDEDOR (NOME, APELIDO) VALUES
	('VENDEDOR 1','VENDEDOR 1'),
	('VENDEDOR 3','VENDEDOR 2'),
	('VENDEDOR 3','VENDEDOR 3'),
	('VENDEDOR 4','VENDEDOR 4')
	GO
*/

/*
	Ok Usuarios do sistema
*/
CREATE TABLE TUSUARIO (
	ID INT IDENTITY(1,1) NOT NULL,
	DHATUALIZACAO DATETIMEOFFSET,
	NOME VARCHAR(60),
	SENHA VARCHAR(100)
PRIMARY KEY (ID))
GO
insert into tusuario(NOME, SENHA) VALUES
('ADMINISTRADOR', '265d1125269cf798b1c6fe711c30d02a')
GO

/*
	Ok Localização dos endereços do parceiro
*/
CREATE TABLE TLOCALIZACAO (
	ID INT IDENTITY(1,1) NOT NULL,
	DHATUALIZACAO DATETIMEOFFSET,
	CEP VARCHAR(08),
	LOGRADOURO VARCHAR(100),
	COMPLEMENTO VARCHAR(100),
	LOCALIDADE VARCHAR(100),
	UF CHAR(02),
	BAIRRO VARCHAR(60),
	LONGITUDE INT, 
	LATITUDE INT,
	DHATUALIZACAO DATETIME
PRIMARY KEY (ID))
GO
/*
	Ok Parceiros para os orçamentos
*/
CREATE TABLE TPARCEIRO (
	ID INT IDENTITY(1,1) NOT NULL,
	DHATUALIZACAO DATETIMEOFFSET,
	RAZAO  VARCHAR(100),
	NOME   VARCHAR(100),
	LOCALIZACAOID INT,
	CNPJ VARCHAR(14),
	INSCRICAO VARCHAR(14),
	CPF VARCHAR(11) ,
	IDENTIDADE VARCHAR(16),
	EMAIL VARCHAR(100),
	SEXO INT,
	FONE VARCHAR(12),
	CELULAR VARCHAR(12),
	CONTATO  VARCHAR(100),
	FONECONTATO VARCHAR(12),
	CELULARCONTATO VARCHAR(12), 
	CELULARCONTATOISWHATSAPP CHAR(1),
	CELULARISWHATSAPP CHAR(1), 
	DHATUALIZACAO DATETIME
PRIMARY KEY (ID))
GO

/*
	OK Formas de pagamento do orçamento
*/
CREATE TABLE TFORMAPAGAMENTO (
	ID INT IDENTITY(1,1) NOT NULL,
	DHATUALIZACAO DATETIMEOFFSET,
	NOME VARCHAR(60), 
	PARCELAS INT,
	DIAS INT, 
	TAXA DECIMAL(12,2)
PRIMARY KEY (ID))
GO

INSERT INTO TFORMAPAGAMENTO (NOME, PARCELAS, DIAS, TAXA)
VALUES 
('A VISTA', 1, 0, -15),
('A PRAZO 30 DIAS', 1, 30, 10),
('PARCELADO 3X', 3, 30, 15),
('PARCELADO 6X', 6, 30, 30),
('CHEQUE A VISTA', 1, 0, -14),
('CHEQUE 30 DIAS ', 1, 30, 10),
('CARTAO DEBITO', 1, 0, 14),
('CARTAO CREDITO', 1, 0, 12.50),
('CARTAO CREDITO 3X', 3, 30, 10),
('CARTAO CREDITO 6X', 6, 30, 5)
GO

/*
	OK Produtos
*/
CREATE TABLE TPRODUTO (
	ID INT IDENTITY(1,1) NOT NULL,
	DHATUALIZACAO DATETIMEOFFSET,
	NOME VARCHAR(100),
	VOLUME CHAR(03),
	CLASSIFICACAO INT, --1-Final, 2-Base, 3-Acabamento, 4-Acessorio, 5-Serviço
	PRECO DECIMAL(12,2),
	CUSTO DECIMAL(12,4), 
	USARPRECOPRODUTOBASE CHAR(1) --S=Indica que o preço é sobre o produto com classificação base
PRIMARY KEY (ID))
GO


INSERT INTO  TPRODUTO (NOME, VOLUME, CLASSIFICACAO, PRECO, CUSTO, USARPRECOPRODUTOBASE)
VALUES 
('PIA','UN',	1, 25.00,	12.0000,'S'),
('BANCADA','UN',	1, 20.00,	15.0000,'S'),
('ACABAMENTO A','M2',	3, 20.00,	15.0000,'S'),
('ACABAMENTO B','M2',	3, 25.00,	15.0000,'S'),
('ACABAMENTO C','M2',	3, 30.00,	15.0000,'S'),
('ACESSORIO A','UN',	4,  5.00,	 1.0000,'S'),
('ACESSORIO B','UN',	4,  2.00,	 1.0000,'S'),
('ACESSORIO C','UN',	4,  4.00,	 1.0000,'S'),
('SERVICO A','UN',	5,  2.00,	 2.0000,'N'),
('SERVICO B','UN',	5,  5.00,	 5.0000,'N'),
('PEDRA GRANITO VERDE','M2',	2, 10.00,	 5.0000,'S'),
('PEDRA MARMORE CARRARA','M2',	2, 15.00,	 4.0000,'S'),
('ACABAMENTO D','M2',	3, 18.00,	 8.0000,'N')
GO

/*
	Modelos com medidas e link de imagem
*/
CREATE TABLE TMODELO (
	ID INT IDENTITY(1,1) NOT NULL,
	DHATUALIZACAO DATETIMEOFFSET,
	NOME VARCHAR(60),
	LARGURA DECIMAL(12,4),
	COMPRIMENTO DECIMAL(12,4),	
	LINKIMAGEM VARCHAR(100)
PRIMARY KEY (ID))
GO

INSERT INTO TMODELO (NOME, LARGURA, COMPRIMENTO, LINKIMAGEM) 
VALUES ('PIA GRANITO PRETO', 2,2, './image/client/modelo/Pias-granito-preto-cozinha.png'),
('PIA GRANITO CINZA', 2,2,'./image/client/modelo/pia-granito-luxo-1-20x0-55m-cinza-bom-jesus.png'),
('PIA GRANITO VERDE', 3,2, './image/client/modelo/pia-granito-luxo-1-80x0-55m-verde-bom-jesus.png'),
('PIA MARMORE IMPERIAL', 2,2, './image/client/modelo/PiaMarmoreImperialCubLoucaIncepa.png')
GO


/*
	Kit para o modelo
	Contem os produtos como Base, Acessorios, Acabamentos, Serviços para um modelo.
*/
CREATE TABLE TMODELOKIT (
	ID INT IDENTITY(1,1) NOT NULL,
	DHATUALIZACAO DATETIMEOFFSET,
	MODELOID INT, 
	PRODUTOID INT, 
	QUANTIDADE DECIMAL(12,4)
PRIMARY KEY (ID))
GO

INSERT INTO TMODELOKIT (MODELOID,	PRODUTOID,	QUANTIDADE)
VALUES
(1,	3,	1.0000),
(1,	7,	1.0000),
(1,	8,	2.0000),
(1,	9,	1.0000),
(1,	11,	1.0000),
(2,	3,	1.0000),
(2,	7,	1.0000),
(2,	8,	2.0000),
(2,	9,	1.0000),
(2,	10,	1.0000)
GO
/*
	Ligação de Produtos e seus modelos
*/
CREATE TABLE TPRODUTOMODELO (
	ID INT IDENTITY(1,1) NOT NULL,
	DHATUALIZACAO DATETIMEOFFSET,
	PRODUTOID INT, 
	MODELOID  INT
PRIMARY KEY (ID))
GO
INSERT INTO TPRODUTOMODELO(PRODUTOID,MODELOID)
VALUES 
(1,	1),
(1,	2),
(2,	2)
GO

/*
	Cadastro de Ocorrencias para usar no orçamento
*/
CREATE TABLE TOCORRENCIA (
	ID INT IDENTITY(1,1) NOT NULL,
	DHATUALIZACAO DATETIMEOFFSET,
	NOME VARCHAR(60), 
	SISTEMA CHAR(1)
PRIMARY KEY (ID))
GO

INSERT INTO TOCORRENCIA (NOME, SISTEMA)
VALUES 
('PRIMEIRA MEDIÇÃO', 'S'),
('ENVIADO AO CLIENTE','S'),
('APROVADO PELO CLIENTE','S'),
('ORÇAMENTO BLOQUEADO', 'S'),
('ENVIADO PARA FABRICA', 'S')
GO

/*
**************************************************
*	Tabelas de Movimento
**************************************************
*	Movimento de orçamentos
*/
CREATE TABLE TORCAMENTO (
	ID INT IDENTITY(1,1) NOT NULL,
	DHATUALIZACAO DATETIMEOFFSET,
	PARCEIROID INT,
	USUARIOID INT,
	NUMERO INT,
	PROJETO VARCHAR(60), 
	DTMOVIMENTO DATETIME,
	DTENTREGA DATETIME,
	DIAVALIDADE INT, 
	VLRDESCONTO DECIMAL(12,4), 
	PERDESCONTO DECIMAL(12,4),
	TOTBASES DECIMAL(12,4),
	TOTACABAMENTOS DECIMAL(12,4),
	TOTACESSORIOS DECIMAL(12,4),
	TOTSERVICOS DECIMAL(12,4),
	TOTPRODUTOS DECIMAL(12,4), 
	TOTORCAMENTO DECIMAL(12,4),
	STATUS INT --0-PENDENTE, 1-BLOQUEADO
PRIMARY KEY (ID))
GO

/*
	Itens do orçamento
	Coluna RootId serve para amarrar as linhas filhas a linha do produto principal
*/
CREATE TABLE TORCAMENTOITEM (
	ID INT IDENTITY(1,1) NOT NULL,
	DHATUALIZACAO DATETIMEOFFSET,
	ORCAMENTOID INT NOT NULL,
	ROOTID INT,
	MODELOID INT,
	PRODUTOID INT,
	CLASSIFICACAO INT,
	AMBIENTE varchar(60),
	LARGURA DECIMAL(12,4),
	COMPRIMENTO DECIMAL(12,4),
	AREA DECIMAL(12,4),
	QUANTIDADEKIT DECIMAL(12,4), 
	QUANTIDADE DECIMAL(12,4), 
	VLRCUSTO DECIMAL(12,4),
	VLRUNITARIO DECIMAL(12,4), 
	VLRDESCONTO DECIMAL(12,4), 
	PERDESCONTO DECIMAL(12,4),
	VLRBRUTO DECIMAL(12,4),
	VLRTOTAL DECIMAL(12,4),
	INDDESCONTOPRODUTOFINAL DECIMAL(12,4)
PRIMARY KEY (ID))
GO

/*
	Financeiro do orçamento
*/
CREATE TABLE TFINANCEIRO (
	ID INT IDENTITY(1,1) NOT NULL,
	DHATUALIZACAO DATETIMEOFFSET,
	PARCEIROID INT NULL,
	ORCAMENTOID INT NULL,
	FORMAPAGAMENTOID INT,
	DTMOVIMENTO DATETIME, 
	DTVENCIMENTO DATETIME, 
	PARCELA INT, 
	VLRPARCELA DECIMAL(12,4),
	VLRTAXA DECIMAL(12,4),
	VLRSALDO DECIMAL(12,4),
	RECDESP INT, 
	HISTORICO varchar(100)
PRIMARY KEY (ID))
GO
/*
	Ocorrencias do orçamento
*/
CREATE TABLE TORCAMENTOOCORRENCIA (
	ID INT IDENTITY(1,1) NOT NULL,
	DHATUALIZACAO DATETIMEOFFSET,
	ORCAMENTOID INT NULL,
	OCORRENCIAID INT,
	DTOCORRENCIA DATETIME, 
	HISTORICO VARCHAR(200), 
	USUARIOID INT,
	LINKANEXO VARCHAR(200)
PRIMARY KEY (ID))
GO

/*
	Anexos do orçamento
*/
CREATE TABLE TORCAMENTOANEXO (
	ID INT IDENTITY(1,1) NOT NULL,
	DHATUALIZACAO DATETIMEOFFSET,
	ORCAMENTOID INT NULL,
	NOME VARCHAR(100),
	LINKANEXO VARCHAR(200)
PRIMARY KEY (ID))
GO

/*
	Tabela para guardar o ultimo registro exportado
*/

CREATE TABLE TREGISTROEXPORTACAO(
	ID INT IDENTITY(1,1), 
	TABELA VARCHAR(100),
	ULTDHATUALIZACAO DATETIMEOFFSET
PRIMARY KEY (ID))
GO

INSERT INTO TREGISTROEXPORTACAO (TABELA, ULTDHATUALIZACAO)
VALUES 
('TSEXO', GETDATE()-1),
('TUF', GETDATE()-1),
('TVENDEDOR', GETDATE()-1),
('TUSUARIO', GETDATE()-1),
('TLOCALIZACAO', GETDATE()-1),
('TPARCEIRO', GETDATE()-1),
('TFORMAPAGAMENTO', GETDATE()-1),
('TPRODUTO', GETDATE()-1),
('TMODELO', GETDATE()-1),
('TMODELOKIT', GETDATE()-1),
('TPRODUTOMODELO', GETDATE()-1),
('TOCORRENCIA', GETDATE()-1),
('TORCAMENTO', GETDATE()-1),
('TORCAMENTOITEM', GETDATE()-1),
('TFINANCEIRO', GETDATE()-1),
('TORCAMENTOOCORRENCIA', GETDATE()-1),
('TORCAMENTOANEXO', GETDATE()-1)

/*
Novas colunas

ALTER TABLE TSEXO ADD DHATUALIZACAO DATETIMEOFFSET
ALTER TABLE TUF ADD DHATUALIZACAO DATETIMEOFFSET
ALTER TABLE TVENDEDOR ADD DHATUALIZACAO DATETIMEOFFSET
ALTER TABLE TUSUARIO ADD DHATUALIZACAO DATETIMEOFFSET
ALTER TABLE TLOCALIZACAO ADD DHATUALIZACAO DATETIMEOFFSET

ALTER TABLE TPARCEIRO ADD DHATUALIZACAO DATETIMEOFFSET
ALTER TABLE TPARCEIRO ADD DHATUALIZACAO DATETIMEOFFSET

ALTER TABLE TFORMAPAGAMENTO ADD DHATUALIZACAO DATETIMEOFFSET
ALTER TABLE TPRODUTO ADD DHATUALIZACAO DATETIMEOFFSET
ALTER TABLE TMODELO ADD DHATUALIZACAO DATETIMEOFFSET
ALTER TABLE TMODELOKIT ADD DHATUALIZACAO DATETIMEOFFSET
ALTER TABLE TPRODUTOMODELO ADD DHATUALIZACAO DATETIMEOFFSET
ALTER TABLE TOCORRENCIA ADD DHATUALIZACAO DATETIMEOFFSET
ALTER TABLE TORCAMENTO ADD DHATUALIZACAO DATETIMEOFFSET
ALTER TABLE TORCAMENTOITEM ADD DHATUALIZACAO DATETIMEOFFSET
ALTER TABLE TFINANCEIRO ADD DHATUALIZACAO DATETIMEOFFSET
ALTER TABLE TORCAMENTOOCORRENCIA ADD DHATUALIZACAO DATETIMEOFFSET
ALTER TABLE TORCAMENTOANEXO ADD DHATUALIZACAO DATETIMEOFFSET
*/